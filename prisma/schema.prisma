generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  password        String
  workoutDefaults WorkoutDefaults[]
  SetEntry    SetEntry[]
}

model MuscleGroup {
  id       Int       @id @default(autoincrement())
  name     String
  workouts Workout[]
  display  String?
}

model Workout {
  id              Int               @id @default(autoincrement())
  name            String
  displayName     String
  muscleGroupId   Int
  muscleGroup     MuscleGroup       @relation(fields: [muscleGroupId], references: [id])
  workoutDefaults WorkoutDefaults[]
  SetEntry    SetEntry[]
}

model WorkoutDefaults {
  id        Int     @id @default(autoincrement())
  userId    Int
  workoutId Int
  weight    Float
  reps      Int
  workout   Workout @relation(fields: [workoutId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, workoutId], name: "workoutId_userId")
}

model SetEntry {
  id        Int      @id @default(autoincrement())
  userId    Int // Foreign key for the User model
  workoutId Int // Foreign key for the Workout model
  timestamp DateTime @default(now()) // Automatically set to the current date and time
  weight    Float // The weight used during the workout
  reps      Int // The number of repetitions performed

  // Relations
  user    User    @relation(fields: [userId], references: [id])
  workout Workout @relation(fields: [workoutId], references: [id])

  @@index([userId], name: "idx_set_entry_user")
  @@index([workoutId], name: "idx_set_entry_workout")
}
